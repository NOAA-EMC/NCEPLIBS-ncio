name: Build and Test
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      FC: gfortran-9
      CC: gcc-9
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-latest]
        compiler: [gcc-9]      

    steps:
    - uses: actions/checkout@v2
    - name: install-dependencies
      run: |
        if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then
          sudo apt-get update
          sudo apt-get install libmpich-dev
          sudo apt-get install libnetcdf-dev libnetcdff-dev netcdf-bin pkg-config
          sudo apt-get install doxygen
        elif [[ ${{ matrix.os }} == "macos-10.15" ]]; then
          brew update
          brew install doxygen
          brew install mpich
          brew install netcdf
          if [[ ${{ matrix.compiler }} == "gcc-9" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          elif  [[ ${{ matrix.compiler }} == "gcc-10" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          fi
        fi
        python3 -m pip install gcovr
       
    - name: build and test
      run: |
        export FC=mpifort
        export CC=mpicc
        mkdir build && cd build
        cmake .. -DENABLE_DOCS=Yes -DCMAKE_Fortran_FLAGS="-g -fprofile-arcs -ftest-coverage -fprofile-abs-path -O0"
        make -j2
        gcovr -v --html-details -o test-coverage.html
        ctest --verbose

    - uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: /home/runner/work/NCEPLIBS-ncio/NCEPLIBS-ncio/*.html
